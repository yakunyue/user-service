<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.fxg.pom</groupId>
  <artifactId>service-parent</artifactId>
  <version>1.0</version>
  <packaging>pom</packaging>

  <name>service-parent</name>
  <description>0.0</description>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.5.2.RELEASE</version>
    <relativePath /> <!-- lookup parent from repository -->
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>com.fxg</groupId>
      <artifactId>spring-extension</artifactId>
      <version>0.0.3-SNAPSHOT</version>
    </dependency>

    <!--
        ################################################################
        第一部分：
        spring boot相关基础依赖配置
        ################################################################
        -->

    <!--spring boot项目的基本依赖-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
      <version>1.5.2.RELEASE</version>
      <exclusions><!-- 去掉默认日志配置 -->
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!--spring boot项目的日志自动配置，会引用log4j相关包并触发自动配置-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j2</artifactId>
      <version>1.5.2.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <version>1.5.2.RELEASE</version>
      <!--不随项目一起发布 -->
      <scope>test</scope>
      <optional>true</optional>
    </dependency>


    <!--spring boot 的测试启动依赖，引入相关jar包并进行自动配置-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>1.5.2.RELEASE</version>
      <scope>test</scope>
    </dependency>

    <!--spring boot web项目启动依赖，引入相关jar包并完成webMvc配置-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>1.5.2.RELEASE</version>
      <exclusions><!-- 去掉默认日志配置 -->
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!--配置spring boot支持aop相并功能-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
      <version>1.5.2.RELEASE</version>
    </dependency>

    <!--统一支持使用基于redis 的spring session. spring session redis的boot启动项-->
    <dependency>
      <groupId>org.springframework.session</groupId>
      <artifactId>spring-session</artifactId>
      <version>1.3.0.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-redis</artifactId>
      <version>1.5.2.RELEASE</version>
    </dependency>

    <!--
        ################################################################
        第二部分
        spring cloud相关基础依赖配置
        ################################################################
        -->

    <!--spring cloud服务注册及发现相关依赖-->
    <!--这个包会与guava有冲突，要处理一下-->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-eureka</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
      <version>1.3.5.RELEASE</version>
    </dependency>

    <!--guava作为一个通用包引用-->

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>23.3-jre</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!--
        ################################################################
        第三部分
        公司内部项目常用的依赖
        ################################################################
        -->

    <!--暂时先没有，因为公司内部各依赖还稳定，交由各项目自己控制-->


    <!--
    ################################################################
    第四部分
    公司统一引入的其他外部第三方依赖
    ################################################################
    -->

    <!--1.1 jackson相关的依赖，用于优化springmvc json转换器性能和效率，大部分是springboot推荐的依赖-->

    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-smile</artifactId>
      <version>2.8.7</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <version>2.8.7</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
      <version>2.8.7</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk7</artifactId>
      <version>2.6.7</version>
      <!--spring boot不有引入这个，是因为用不到？有可能，先引入进来吧-->
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-joda</artifactId>
      <version>2.8.7</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>2.8.7</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
      <version>2.8.7</version>
    </dependency>

    <!--1.2数据库连接池-->

    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>2.5.1</version>
      <!---->
      <!--spring boot指定了匹配版本-->
    </dependency>

    <!--<dependency>-->
    <!--<groupId>javax.servlet</groupId>-->
    <!--<artifactId>javax.servlet-api</artifactId>-->
    <!--<scope>provided</scope>-->
    <!--</dependency>-->
    <!--异步日志的支持包-->
    <dependency>
      <groupId>com.lmax</groupId>
      <artifactId>disruptor</artifactId>
      <version>3.3.0</version>
    </dependency>

    <!--spring boot starter 依赖，引入相关jar包及触发自动配置-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <!--添加mysql connector依赖，如继承公司统一pom时，不需要指定版本号，会使用指定的默认版本-->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <!--使用指定的默认版本-->
    </dependency>
    <!--这是hibernate的补充包，用于适配java8日期格式及optional类型 parent pom已添加了版本管理，无需设置-->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-java8</artifactId>
    </dependency>

    <!--<dependency>-->
    <!--<groupId>commons-io</groupId>-->
    <!--<artifactId>commons-io</artifactId>-->
    <!--<version>2.6</version>-->
    <!--</dependency>-->

    <!--lombok 自动生成setter、getter的工具-->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.16.16</version>
    </dependency>

  </dependencies>


  <build>

    <finalName>${project.artifactId}</finalName>
    <plugins>
      <!--spring boot maven插件，用于打包spring boot相关专有信息-->
      <!--没有测试是否可以去除，先保留-->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!--添加mybatis generator插件备用-->
      <plugin>
        <groupId>org.mybatis.generator</groupId>
        <artifactId>mybatis-generator-maven-plugin</artifactId>
        <version>1.3.2</version>
        <configuration>
          <verbose>true</verbose>
          <overwrite>true</overwrite>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.0.2</version>
      </plugin>
      <!--<plugin>-->
        <!--<groupId>org.apache.maven.plugins</groupId>-->
        <!--<artifactId>maven-enforcer-plugin</artifactId>-->
        <!--<version>3.0.0-M1</version>-->

        <!--<executions>-->
          <!--<execution>-->
            <!--<id>enforce-versions</id>-->
            <!--<phase>validate</phase>-->
            <!--<goals>-->
              <!--<goal>enforce</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
              <!--<fail>true</fail>-->
              <!--<failFast>false</failFast>-->
              <!--<rules>-->
                <!--<dependencyConvergence/>-->
                <!--<requireJavaVersion>-->
                  <!--<message>-->
                    <!--<![CDATA[公司统一规则定必须使用JAVA8或以上版本]]>-->
                  <!--</message>-->
                  <!--<version>-->
                    <!--[1.8.0,)-->
                  <!--</version>-->
                <!--</requireJavaVersion>-->
                <!--<requireReleaseDeps>-->
                  <!--<searchTransitive>true</searchTransitive>-->
                  <!--&lt;!&ndash;当前项目为快照版的时候，可以使用快照版的依赖，否则报错&ndash;&gt;-->
                  <!--<onlyWhenRelease>true</onlyWhenRelease>-->
                  <!--<message>-->
                    <!--<![CDATA[公司统一规则定正式发布版本禁止使用快照版本依赖]]>-->
                  <!--</message>-->
                <!--</requireReleaseDeps>-->

              <!--</rules>-->
            <!--</configuration>-->
          <!--</execution>-->
        <!--</executions>-->

      <!--</plugin>-->
    </plugins>
    <!--定义具体的编译细节-->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.properties</include>
          <include>**/*.xml</include>
          <include>**/*.tld</include>
        </includes>
        <excludes>
          <exclude>generatorConfig.xml</exclude>
        </excludes>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.properties</include>
          <include>**/*.xml</include>
          <include>**/*.tld</include>
        </includes>
        <filtering>false</filtering>
      </resource>
    </resources>
  </build>

</project>